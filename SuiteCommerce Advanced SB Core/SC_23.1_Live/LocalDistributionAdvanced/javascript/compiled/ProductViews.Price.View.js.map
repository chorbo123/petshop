{"version":3,"sources":["ProductViews.Price.View.ts"],"names":[],"mappings":"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","file":"ProductViews.Price.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductViews.Price.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as product_views_price_tpl from 'product_views_price.tpl';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport Session = require('../../Session/JavaScript/Session');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductViews.Price.View @extends BackboneView\nconst ProductViewsPriceView: any = BackboneView.extend(\n    {\n        // @property {Function} template\n        template: product_views_price_tpl,\n\n        profileModel: ProfileModel.getInstance(),\n\n        // @method initialize\n        // @param {ProductViews.Price.View.Initialize.Options} options\n        // @return {Void}\n        initialize: function() {\n            this.model.on('change', this.render, this);\n        },\n\n        // @method getUrlLogin Get the login URL contains an origin\n        // hash parameter indicating the current URL to came back after login\n        // @return {String}\n        getUrlLogin: function(): string {\n            const url = `${Session.get('touchpoints.login')}&origin=${Configuration.get(\n                'currentTouchpoint'\n            ) || 'home'}&origin_hash=`;\n\n            return (\n                url +\n                encodeURIComponent(\n                    this.options.origin === 'PDPQUICK'\n                        ? this.model.generateURL().replace('/', '')\n                        : Backbone.history.fragment\n                )\n            );\n        },\n\n        // @method getContext\n        // @returns {ProductViews.Price.View.Context}\n        getContext: function() {\n            const price = this.model.getPrice();\n            const isPriceRange = !!(price.min && price.max);\n            let showComparePrice = false;\n            const frequency = this.model.get('frequency');\n            const frequencyLabel = frequency ? ` / ${frequency}` : '';\n\n            // Show PreOrder or InStock when allow backorders.\n            const backOrderPreOrder =\n                Configuration.get('structureddatamarkup.availabilityonbackorder') === 'PreOrder';\n\n            if (!this.options.hideComparePrice) {\n                showComparePrice = isPriceRange\n                    ? price.max.price < price.compare_price\n                    : price.price < price.compare_price;\n            }\n\n            const item = (this.model.getItem && this.model.getItem()) || this.model;\n            const strikeThroughPrice = item && item.getStrikeThroughPrice();\n            const hasStrikeThrough = !!strikeThroughPrice;\n\n            if (hasStrikeThrough) {\n                showComparePrice = true;\n            }\n\n            // @class ProductViews.Price.View.Context\n            return {\n                // @property {Boolean} isPriceEnabled\n                isPriceEnabled: !this.profileModel.hidePrices(),\n                // @property {Boolean} isPriceVisible\n                isPriceVisible:\n                    (item && item.get('ispricevisible') !== false) ||\n                    (SC.Configuration && SC.Configuration.isSCIS),\n                // @property {Object} isPriceVisible_detail\n                isPriceVisible_detail: item && item.get('ispricevisible_detail'),\n                // @property {Boolean} isLoggedIn\n                isLoggedIn: this.profileModel.isLoggedIn(),\n                // @property {String} urlLogin\n                urlLogin: this.getUrlLogin(),\n                // @property {Boolean} isPriceRange\n                isPriceRange: isPriceRange,\n                // @property {Boolean} showComparePrice\n                showComparePrice: showComparePrice,\n                // @property {Boolean} isInStock\n                isInStock: this.model.getStockInfo().isInStock,\n                // @property {Boolean} isPurchasable\n                isPurchasable: this.model.getStockInfo().isPurchasable,\n                // @property {Boolean} backOrderPreOrder\n                backOrderPreOrder: backOrderPreOrder,\n                // @property {Item.Model|Product.Model} model\n                model: this.model,\n                // @property {String} currencyCode\n                currencyCode:\n                    SC.getSessionInfo('currency') && SC.getSessionInfo('currency').code\n                        ? SC.getSessionInfo('currency').code\n                        : Configuration.get('siteSettings.shopperCurrency.code'),\n                // @property {String} priceFormatted\n                priceFormatted: price.price_formatted || '',\n                // @property {String} comparePriceFormatted\n                comparePriceFormatted: item.getComparePrice(price, strikeThroughPrice),\n                // @property {String} minPriceFormatted\n                minPriceFormatted: price.min ? price.min.price_formatted : '',\n                // @property {String} maxPriceFormatted\n                maxPriceFormatted: price.max ? price.max.price_formatted : '',\n                // @property {Number} price\n                price: price.price ? price.price : 0,\n                // @property {Number} price\n                frequency: frequencyLabel,\n                // @property {Number} comparePrice\n                comparePrice: price.compare_price ? price.compare_price : 0,\n                // @property {Number} minPrice\n                minPrice: price.min ? price.min.price : 0,\n                // @property {Number} maxPrice\n                maxPrice: price.max ? price.max.price : 0,\n\n                // @property {Boolean} showHighlightedMessage\n                showHighlightedMessage:\n                    _.indexOf(ProductViewsPriceView.highlightedViews, this.options.origin) >= 0\n            };\n            // @class ProductViews.Price.View\n        }\n    },\n    {\n        // @property {Array<String>} highlightedViews Contains the list\n        // of all origins that in case of using the \"LOGIN TO SEE PRICES\"\n        // feature must render a highlighted notification message\n        // @static\n        highlightedViews: ['PDPQUICK', 'PDPFULL']\n    }\n);\n\nexport = ProductViewsPriceView;\n\n// @class ProductViews.Price.View.Initialize.Options\n// @property {String?} origin Possible values are:\n//\tPDPCONFIRMATION \t\tFor the PDP confirmation message\n//\tITEMCELL \t\t\t\tFor each item being shown in the item list (ex your-domain.com/search)\n//\tPDPQUICK \t\t\t\tFor a PDP being shown on a quick view form\n//\tPDPFULL \t\t\t\tFull PDP view\n//\tRELATEDITEM\t\t\t\tRelated Item\n//\tPRODUCTLISTDETAILSLATER\tUsed to render each item that was saved for later\n//\tPRODUCTLISTDETAILSFULL\tUsed to render each item that is shown inside My Account in the details\n//\tof a particular Product List\n//\tPRODUCTLISTDETAILSEDIT\tUsed when rendering the form to edit an item inside a product list\n//\tITEMVIEWCELL\t\t\tFor all list where items are rendered\n//\n// @property {Number?} linePrice Specify this value if you want to use a different price rather\n// than the one of the line\n// @property {String?} linePriceFormatted This string valid must be present if you want to use a\n// custom price containing the formatted value of linePrice\n// @property {Boolean?} hideComparePrice\n// @property {Item.Model|Product.Model} model\n"]}