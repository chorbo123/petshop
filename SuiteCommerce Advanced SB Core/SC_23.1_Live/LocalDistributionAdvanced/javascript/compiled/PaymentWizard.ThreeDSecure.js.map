{"version":3,"sources":["PaymentWizard.ThreeDSecure.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,IAAM,yBAAyB,GAAQ,0CAA0C,CAAC,MAAM,CAAC;QACrF,yBAAyB,EAAE,CAAC;QAC5B,aAAa,EAAE,KAAK;QACpB,4EAA4E;QAC5E,8CAA8C;QAC9C,IAAI,EAAE,UAAS,YAAoB;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,CAAC;QACD,iBAAiB,EAAE,UAAS,IAAI;YAC5B,OAAO,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,iBAAiB,CAAC;QACrF,CAAC;QACD,YAAY,EAAE;YAAA,iBAWb;YAVG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE;gBACb,MAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;gBACzE,IAAI,CAAC,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE;oBAC3C,IAAI,CAAC,KAAI,CAAC,aAAa,EAAE;wBACrB,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;qBAC1B;iBACJ;qBAAM;oBACH,KAAI,CAAC,gBAAgB,EAAE,CAAC;iBAC3B;YACL,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC","file":"PaymentWizard.ThreeDSecure.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.ThreeDSecure\"/>\n\nimport '../../../Commons/Transaction/JavaScript/Transaction.Model';\nimport * as _ from 'underscore';\n\nimport OrderWizardModulePaymentMethodThreeDSecure = require('../../OrderWizard.Module.PaymentMethod/JavaScript/OrderWizard.Module.PaymentMethod.ThreeDSecure');\nimport Deferred = JQuery.Deferred;\n\nconst PaymentWizardThreeDSecure: any = OrderWizardModulePaymentMethodThreeDSecure.extend({\n    threeDSecureCallBackModel: 2,\n    processFailed: false,\n    // @method fail Called if confirmation coming from 3D Secure ssp file fails.\n    // @return {jQuery.Deferred} Rejected promise.\n    fail: function(errorMessage: string): Deferred<string> {\n        this.processFailed = true;\n        this.closeModal();\n        return this.deferred.rejectWith(this, [errorMessage]);\n    },\n    isSuccess3DSecure: function(data) {\n        return data && data.confirmation && data.confirmation.type === 'customerpayment';\n    },\n    onCloseModal: function() {\n        this.on('modal-close', () => {\n            (<any>window).removeEventListener('message', this.receiveMessage, false);\n            if (_.isEmpty(this.model.get('confirmation'))) {\n                if (!this.processFailed) {\n                    this.deferred.reject();\n                }\n            } else {\n                this.closeModalAction();\n            }\n        });\n    }\n});\n\nexport = PaymentWizardThreeDSecure;\n"]}