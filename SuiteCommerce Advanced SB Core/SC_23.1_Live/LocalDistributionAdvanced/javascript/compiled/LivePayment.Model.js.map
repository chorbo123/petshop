{"version":3,"sources":["LivePayment.Model.ts"],"names":[],"mappings":"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","file":"LivePayment.Model.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LivePayment.Model\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\nimport { AddressCollection } from '../../../Commons/Address/JavaScript/Address.Collection';\n\nimport InvoiceCollection = require('../../Invoice/JavaScript/Invoice.Collection');\nimport BigNumber = require('../../../Commons/Utilities/JavaScript/BigNumber');\nimport TransactionPaymentmethodCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Paymentmethod.Collection');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport Singleton = require('../../../Commons/Main/JavaScript/Singleton');\nimport CreditTransactionCollection = require('../../PaymentWizard/JavaScript/PaymentWizard.CreditTransaction.Collection.js');\n\nconst LivePaymentModel: any = Backbone.Model.extend(\n    {\n        urlRoot: 'services/LivePayment.Service.ss',\n\n        initialize: function(attributes) {\n            this.set('invoices_total', 0);\n            this.set('invoices_total_with_discount', 0);\n\n            this.on('sync', function(model) {\n                model.set('invoices_total', 0);\n            });\n\n            this.on('change:addresses', function(model, addresses) {\n                model.set('addresses', new AddressCollection(addresses), { silent: true });\n            });\n            this.trigger('change:addresses', this, (attributes && attributes.addresses) || []);\n\n            this.on('change:paymentmethods', function(model, paymentmethods) {\n                model.set(\n                    'paymentmethods',\n                    new TransactionPaymentmethodCollection(paymentmethods),\n                    { silent: true }\n                );\n            });\n            this.trigger(\n                'change:paymentmethods',\n                this,\n                (attributes && attributes.paymentmethod) || []\n            );\n\n            this.on('change:invoices', function(model, invoices) {\n                model.set('invoices', new InvoiceCollection(invoices), {\n                    silent: true\n                });\n            });\n            this.trigger('change:invoices', this, (attributes && attributes.invoices) || []);\n\n            this.on('change:deposits', function(model, deposits) {\n                model.set('deposits', new CreditTransactionCollection(deposits), { silent: true });\n            });\n            this.trigger('change:deposits', this, (attributes && attributes.deposits) || []);\n\n            this.on('change:credits', function(model, credits) {\n                model.set('credits', new CreditTransactionCollection(credits), { silent: true });\n            });\n            this.trigger('change:credits', this, (attributes && attributes.credits) || []);\n\n            this.on('change:balance', function(model) {\n                const profile_model = ProfileModel.getInstance();\n                profile_model.set('balance', model.get('balance'));\n                profile_model.set('balance_formatted', model.get('balance_formatted'));\n            });\n\n            this.set('invoicesSelected', new InvoiceCollection([], { status: 'makeAPayment' }));\n        },\n\n        makeAPayment: function(invoicesSelected) {\n            const internalIds = _.pluck(invoicesSelected, 'internalid').join(',');\n            const currency = invoicesSelected[0].get('currency')  || SC.ENVIRONMENT.currentCurrency;\n\n            this.changeCurrencyByInvoiceId(currency.internalid, internalIds);\n\n            invoicesSelected.forEach(invoice => {\n                this.selectInvoice(invoice.get('internalid'));\n            });\n        },\n\n        // @method getSelectedInvoices @return {Invoice.Collection}\n        getSelectedInvoices: function() {\n            return new InvoiceCollection(\n                this.get('invoices').filter(function(invoice) {\n                    return invoice.get('apply');\n                })\n            );\n        },\n\n        // @method getCurrency @return {Currency}\n        getCurrency: function() {\n            const invoices = this.get('invoicesSelected');\n            let currencyName = SC.ENVIRONMENT.currentCurrency.currencyname;\n\n            if (invoices.length) {\n                const currency = invoices.first().get('currency');\n                currencyName = currency ? currency.name : currencyName;\n            }\n\n            return (\n                Utils.getCurrencyByName(currencyName));\n        },\n\n        // @method getAppliedTransactions @return  {PaymentWizard.CreditTransaction.Collection}\n        getAppliedTransactions: function(type) {\n            return new CreditTransactionCollection(\n                this.get(type).filter(function(transaction) {\n                    return transaction.get('apply');\n                })\n            );\n        },\n\n        // @method selectInvoice @param {Invoice.Model}\n        selectInvoice: function(invoiceInternalid) {\n            this.currency = this.getCurrency();\n            this.currencySymbol = this.currency.symbol;\n\n            const invoice = this.get('invoices').get(invoiceInternalid);\n\n            if (invoice && invoice.get('due')) {\n                // marks the invoice as checked\n                invoice.set('apply', true);\n                invoice.set('checked', true);\n                const amount = invoice.get('due') ? invoice.get('due') : invoice.get('amount');\n                invoice.set('amount', amount);\n                invoice.set('amount_formatted', Utils.formatCurrency(amount, this.currencySymbol));\n            }\n\n            this.distributeCredits();\n        },\n\n        // @method unselectInvoice @param {Invoice.Model}\n        unselectInvoice: function(invoice) {\n            this.currency = this.getCurrency();\n            this.currencySymbol = this.currency.symbol;\n\n            invoice = this.get('invoices').get(invoice);\n\n            if (invoice) {\n                invoice.set('apply', false);\n                invoice.set('checked', false);\n                this.get('invoices').remove(invoice);\n            }\n\n            this.distributeCredits();\n        },\n\n        // @method selectCredit @param {PaymentWizard.CreditTransaction.Model} credit\n        selectCredit: function(credit) {\n            credit = this.get('credits').get(credit);\n\n            if (credit && credit.get('remaining')) {\n                // marks the credit as checked\n                credit.set('apply', true);\n\n                let amount = new BigNumber(credit.get('remaining'))\n                    .minus(this.get('payment'))\n                    .toNumber();\n\n                if (this.isAmountValid(amount)) {\n                    amount = new BigNumber(credit.get('remaining')).minus(amount).toNumber();\n                } else {\n                    amount = credit.get('remaining');\n                }\n\n                credit.set('amount', amount);\n                credit.set('amount_formatted', Utils.formatCurrency(amount, this.currencySymbol));\n            }\n\n            this.calculeTotal();\n        },\n\n        // @method selectDeposit @param {PaymentWizard.CreditTransaction.Model} deposit\n        selectDeposit: function(deposit) {\n            deposit = this.get('deposits').get(deposit);\n\n            if (deposit && deposit.get('remaining')) {\n                // marks the credit as checked\n                deposit.set('apply', true);\n\n                let amount = new BigNumber(deposit.get('remaining'))\n                    .minus(this.get('payment'))\n                    .toNumber();\n\n                if (this.isAmountValid(amount)) {\n                    amount = new BigNumber(deposit.get('remaining')).minus(amount).toNumber();\n                } else {\n                    amount = deposit.get('remaining');\n                }\n\n                deposit.set('amount', amount);\n                deposit.set('amount_formatted', Utils.formatCurrency(amount, this.currencySymbol));\n            }\n\n            this.calculeTotal();\n        },\n\n        // @method unselectCredit @param {PaymentWizard.CreditTransaction.Model} credit\n        unselectCredit: function(credit) {\n            credit = this.get('credits').get(credit);\n\n            if (credit) {\n                credit.set('apply', false);\n                credit.set('amount', 0);\n                credit.set('amount_formatted', Utils.formatCurrency(0, this.currencySymbol));\n            }\n\n            this.calculeTotal();\n        },\n\n        // @method unselectDeposit @param {PaymentWizard.CreditTransaction.Model} deposit\n        unselectDeposit: function(deposit) {\n            deposit = this.get('deposits').get(deposit);\n\n            if (deposit) {\n                deposit.set('apply', false);\n                deposit.set('amount', 0);\n                deposit.set('amount_formatted', Utils.formatCurrency(0, this.currencySymbol));\n            }\n\n            this.calculeTotal();\n        },\n\n        // @method normalizeDate @param {Date} date @return {Date|Number}\n        normalizeDate: function(date) {\n            if (!date) {\n            } else if (date instanceof Date) {\n                return date.getTime();\n            } else if (typeof date === 'string') {\n                return Date.parse(date);\n            } else if (typeof date === 'number') {\n                return date;\n            }\n        },\n\n        // @method isAmountValid @param {Int} amount @return {Boolean}\n        isAmountValid: function isAmountValid(amount) {\n            return new BigNumber(amount).isGreaterThan(0);\n        },\n\n        calculateInvoiceTotal: function calculateInvoiceTotal(invoice, invoices_total) {\n            let amount = invoice.get('amount');\n            if (invoice.get('discountapplies') && amount === invoice.get('due')) {\n                amount = invoice.get('duewithdiscount');\n            }\n            return new BigNumber(invoices_total).plus(amount).toNumber();\n        },\n\n        // Distributes deposits, payments and credit memos\n\n        // @method distributeCredits\n        distributeCredits: function() {\n            // First thing is to order everything by date and initialize parameters\n            const self = this;\n            const invoices = new InvoiceCollection(\n                this.get('invoices').sortBy(function(invoice) {\n                    return self.normalizeDate(invoice.get('duedate'));\n                })\n            );\n            const deposits = this.get('deposits').models;\n            const credits = this.get('credits').models;\n            let invoices_total = 0;\n\n            invoices.each(function(invoice) {\n                invoices_total = self.calculateInvoiceTotal(invoice, invoices_total);\n            });\n\n            // Then apply remaining deposits to complete and try to apply credit memo and payments.\n            const PaymentCollections = deposits.concat(credits);\n\n            _.each(PaymentCollections, function(value: any) {\n                if (\n                    self.isAmountValid(value.get('remaining')) &&\n                    self.isAmountValid(invoices_total)\n                ) {\n                    const amount = new BigNumber(invoices_total).isGreaterThanOrEqualTo(\n                        value.get('remaining')\n                    )\n                        ? value.get('remaining')\n                        : invoices_total;\n\n                    value.set('apply', true);\n                    value.set('amount', amount);\n                    value.set(\n                        'amount_formatted',\n                        Utils.formatCurrency(amount, self.currencySymbol)\n                    );\n\n                    invoices_total = new BigNumber(invoices_total).minus(amount).toNumber();\n                } else {\n                    value.set('apply', false);\n                    value.set('amount', 0);\n                    value.set('amount_formatted', Utils.formatCurrency(0, self.currencySymbol));\n                }\n            });\n\n            this.calculeTotal();\n        },\n\n        // @method calculeTotal @param {Boolean} silent\n        calculeTotal: function(silent) {\n            let invoices_total = 0;\n            let payment_total = 0;\n            let deposits_total = 0;\n            let credits_total = 0;\n            let invoices_total_with_discount = 0;\n            const self = this;\n            const invoices = new InvoiceCollection(\n                this.get('invoices').sortBy(function(invoice) {\n                    return self.normalizeDate(invoice.get('duedate'));\n                })\n            );\n            const deposits = this.get('deposits');\n            const credits = this.get('credits');\n\n            invoices.each(function(invoice) {\n                invoices_total = self.calculateInvoiceTotal(invoice, invoices_total);\n                invoices_total_with_discount = new BigNumber(invoices_total_with_discount)\n                    .plus(invoice.get('amount'))\n                    .toNumber();\n            });\n\n            payment_total = invoices_total;\n            let payment_total_with_discount = invoices_total_with_discount;\n\n            deposits.each(function(deposit) {\n                deposits_total = new BigNumber(deposits_total)\n                    .plus(deposit.get('amount'))\n                    .toNumber();\n                payment_total = new BigNumber(payment_total)\n                    .minus(deposit.get('amount'))\n                    .toNumber();\n                payment_total_with_discount = new BigNumber(payment_total_with_discount)\n                    .minus(deposit.get('amount'))\n                    .toNumber();\n            });\n\n            credits.each(function(credit) {\n                credits_total = new BigNumber(credits_total).plus(credit.get('amount')).toNumber();\n                payment_total = new BigNumber(payment_total).minus(credit.get('amount')).toNumber();\n                payment_total_with_discount = new BigNumber(payment_total_with_discount)\n                    .minus(credit.get('amount'))\n                    .toNumber();\n            });\n\n            if (payment_total_with_discount < 0) {\n                payment_total_with_discount = 0;\n            }\n\n            if (!silent) {\n                this.set(\n                    'invoices_total_formatted',\n                    Utils.formatCurrency(invoices_total, this.currencySymbol)\n                );\n                this.set(\n                    'invoices_total_with_discount_formatted',\n                    Utils.formatCurrency(invoices_total_with_discount, this.currencySymbol)\n                );\n                this.set(\n                    'deposits_total_formatted',\n                    Utils.formatCurrency(\n                        new BigNumber(deposits_total).negated().toNumber(),\n                        this.currencySymbol\n                    )\n                );\n                this.set(\n                    'credits_total_formatted',\n                    Utils.formatCurrency(\n                        new BigNumber(credits_total).negated().toNumber(),\n                        this.currencySymbol\n                    )\n                );\n                this.set(\n                    'payment_formatted',\n                    Utils.formatCurrency(payment_total, this.currencySymbol)\n                );\n                this.set(\n                    'payment_total_with_discount_formatted',\n                    Utils.formatCurrency(payment_total_with_discount, this.currencySymbol)\n                );\n                this.set('currency_symbol', this.currencySymbol);\n                this.set('invoices_total', invoices_total);\n                this.set('invoices_total_with_discount', invoices_total_with_discount);\n                this.set('deposits_total', deposits_total);\n                this.set('credits_total', credits_total);\n                this.set('payment', payment_total);\n                this.set('payment_total_with_discount', payment_total_with_discount);\n\n                if (this.currency) {\n                    this.set('currency_id', this.currency.internalid);\n                }\n            }\n\n            return payment_total;\n        },\n\n        addPayment: function addPayment(payment_method) {\n            // Gets the payment method collection\n            const payment_methods = this.get('paymentmethods');\n\n            // Removes the primary if any\n            payment_methods.remove(payment_methods.where({ primary: true }));\n\n            // Sets it as primary\n            payment_method.set('primary', true);\n\n            // Adds it to the collection\n            payment_methods.add(payment_method);\n        },\n\n        changeCurrency: function(currency, page) {\n            return this.changeCurrencyCall(`${this.urlRoot}?cur=${currency}&page=${page}`);\n        },\n\n        changeCurrencyByInvoiceId: function(currency, invoice_internalid) {\n            return this.changeCurrencyCall(\n                `${this.urlRoot}?cur=${currency}&invoice_internalid=${invoice_internalid}&page=all`\n            );\n        },\n\n        changeCurrencyCall: function(url) {\n            const self = this;\n\n            jQuery.ajax({\n                url: Utils.getAbsoluteUrl(url),\n                success: function(data) {\n                    self.set(data);\n                },\n                async: false\n            });\n        }\n    },\n    Singleton\n);\n\nexport = LivePaymentModel;\n"]}