{"version":3,"sources":["PageType.Settings.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAiBF;QAA2C,yCAAyC;QAahF,+BAAmB,UAAmC;YAAtD,YACI,iBAAO,SAIV;YAjBD,2FAA2F;YAC1E,mBAAa,GAAG,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC;YAEpD,gBAAU,GAAW,EAAE,CAAC;YACxB,aAAO,GAAW,EAAE,CAAC;YAE5B,aAAO,GAAG;gBAChB,OAAA,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,8BAA8B,EAAE,IAAI,CAAC,EAAE;oBAC7E,UAAU,EAAE,KAAI,CAAC,UAAU;oBAC3B,OAAO,EAAE,KAAI,CAAC,OAAO;iBACxB,CAAC;YAHF,CAGE,CAAC;YAKH,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;;QACtC,CAAC;QAED,+EAA+E;QACxE,qCAAK,GAAZ;YACI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrD,CAAC;QACL,4BAAC;IAAD,CAxBA,AAwBC,CAxB0C,aAAK,GAwB/C;IAxBY,sDAAqB","file":"PageType.Settings.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PageType.Settings.Model\"/>\n// @Typescript-partial\n\nimport { Model } from '../../../Commons/Core/JavaScript/Model';\nimport { PageTypeSettings } from '../../../ServiceContract/Common/PageType/PageType';\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport BackboneCachedModel = require('../../BackboneExtras/JavaScript/Backbone.CachedModel');\n\ninterface PageTypeSettingsOptions {\n    internalId: string;\n    recName: string;\n}\n\nexport class PageTypeSettingsModel extends Model<PageTypeSettings, PageTypeSettings> {\n    // TODO: Once this extends of CachedModel the access to the prototype fetch won't be needed\n    private readonly originalFetch = BackboneCachedModel.prototype.fetch;\n\n    private readonly internalId: string = '';\n    private readonly recName: string = '';\n\n    protected urlRoot = (): string =>\n        Utils.addParamsToUrl(Utils.getAbsoluteUrl('services/PageTypeSettings.ss', true), {\n            internalid: this.internalId,\n            recname: this.recName\n        });\n\n    public constructor(attributes: PageTypeSettingsOptions) {\n        super();\n\n        this.internalId = attributes.internalId;\n        this.recName = attributes.recName;\n    }\n\n    // Overrides fetch so we make sure that the cache is set to true, so we wrap it\n    public fetch() {\n        return this.originalFetch.apply(this, arguments);\n    }\n}\n"]}